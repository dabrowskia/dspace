% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/1a_ds_points.R
\name{ds_points}
\alias{ds_points}
\title{ds_points}
\usage{
ds_points(
  x,
  k = 2,
  data = -grep(names(x), pattern = "^geom"),
  similarity.measure = "euclidean",
  style = "B",
  n.neigh = 8,
  plot = TRUE,
  explain = TRUE
)
}
\arguments{
\item{x}{point or polygon shapefile data;}

\item{k}{number of communities;}

\item{data}{attributes of the spatial data frame to calculate similarity or
distance measure;}

\item{similarity.measure}{Character or function to declare distance method
transformed into similarity measure. If method is
character, method must be "mahalanobis" or "euclidean", "maximum",
"manhattan", "canberra", "binary" or "minkowski". If method is one of
"euclidean", "maximum", "manhattan", "canberra", "binary" or "minkowski",
see dist for details, because this function is used to compute the distance.
If method is set to "mahalanobis", the mahalanobis distance is computed between
neighbor points. If method is a function, this function is used to compute
the distance.}

\item{style}{style can take values “W”, “B”, “C”, “U”, “minmax” and “S” (see spdep::nb2listw)}

\item{n.neigh}{number of neighbors considered in the k-nearest neighbor
algorithm that builds topology network}

\item{plot}{should the neighborhood be plotted}

\item{explain}{logical. If TRUE a machine learning (randomForest
using 5 fold cross validation) model is being constructed based
on the data provided for regionalization. The accuracy of this model
explains how much of the regionalization can be attributed to the data
and how much to the spatial distribution.}
}
\value{
vector of numbers representing regions to which each element belongs to
}
\description{
Creates a vector of community assignment based on neighboring points. It is based
on a topological network structure where points represent nodes and the edges
are the degree of similarity between those nodes. Communities are created using fast greedy
algorithm that maximizes their modularity.
}
